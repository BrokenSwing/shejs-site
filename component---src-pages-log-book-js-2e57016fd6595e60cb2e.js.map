{"version":3,"sources":["webpack:///./src/pages/log-book.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/nav-link.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","LogBook","_ref","data","a","createElement","title","allMarkdownRemark","edges","map","_ref2","node","Fragment","frontmatter","week","dangerouslySetInnerHTML","__html","html","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","React","InternalPageRenderer","Object","assign","json","propTypes","PropTypes","shape","string","isRequired","SEO","description","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","array","arrayOf","StaticQueryContext","createContext","StaticQuery","props","react_default","Consumer","staticQueryData","render","children","object","func","NavLink","to","gatsby_link_default","activeClassName","class","Header","siteTitle","href","components_nav_link","Footer","gatsby_browser_entry_StaticQuery","Date","getFullYear","style","float","_1563720716","Layout","components_header","components_footer","_755544856"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,0BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAmBaI,EAAK,aAkBHM,UA/BC,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACdN,EAAAO,EAAAC,cAACN,EAAA,EAAD,KACEF,EAAAO,EAAAC,cAACL,EAAA,EAAD,CAAKM,MAAM,mBACXT,EAAAO,EAAAC,cAAA,4BACCF,EAAKI,kBAAkBC,MAAMC,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OAC9Bd,EAAAO,EAAAC,cAAAR,EAAAO,EAAAQ,SAAA,KACIf,EAAAO,EAAAC,cAAA,qBAAaM,EAAKE,YAAYC,MAC9BjB,EAAAO,EAAAC,cAAA,OAAKU,wBAAyB,CAACC,OAAQL,EAAKM,kCCbxD,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,4KCMzCK,EAAmB,SAAArB,GAAkB,IAAfsB,EAAetB,EAAfsB,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAOC,IAAMxB,cAAcyB,IAApBC,OAAAC,OAAA,CACLR,WACAC,iBACGA,EAAcQ,QAIrBV,EAAiBW,UAAY,CAC3BV,SAAUW,IAAUC,MAAM,CACxBR,SAAUO,IAAUE,OAAOC,aAC1BA,YAGUf,4LChBf,SAASgB,EAATrC,GAA2D,IAA5CsC,EAA4CtC,EAA5CsC,YAAaC,EAA+BvC,EAA/BuC,KAAMC,EAAyBxC,EAAzBwC,KAAMC,EAAmBzC,EAAnByC,SAAUrC,EAASJ,EAATI,MACxCsC,EADiDC,EAAA1C,KACjDyC,KAcFE,EAAkBN,GAAeI,EAAKG,aAAaP,YAEzD,OACEQ,EAAA5C,EAAAC,cAAC4C,EAAA7C,EAAD,CACE8C,eAAgB,CACdT,QAEFnC,MAAOA,EACP6C,cAAa,QAAUP,EAAKG,aAAazC,MACzCoC,KAAM,CACJ,CACEU,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAAS/C,GAEX,CACEgD,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAAST,EAAKG,aAAaQ,QAE7B,CACEH,KAAI,gBACJC,QAAS/C,GAEX,CACE8C,KAAI,sBACJC,QAASP,IAGVU,OACCb,EAASc,OAAS,EACd,CACEL,KAAI,WACJC,QAASV,EAASe,KAAT,OAEX,IAELF,OAAOd,KAKhBH,EAAIoB,aAAe,CACjBlB,KAAI,KACJC,KAAM,GACNC,SAAU,gDAGZJ,EAAIL,UAAY,CACdM,YAAaL,IAAUE,OACvBI,KAAMN,IAAUE,OAChBK,KAAMP,IAAUyB,MAChBjB,SAAUR,IAAU0B,QAAQ1B,IAAUE,QACtC/B,MAAO6B,IAAUE,OAAOC,YAGXC,6PC9ETuB,UAAqBjC,IAAMkC,cAAc,KAEzCC,EAAc,SAAAC,GAAK,OACvBC,EAAA9D,EAAAC,cAACyD,EAAmBK,SAApB,KACG,SAAAC,GACC,OACEH,EAAM9D,MACLiE,EAAgBH,EAAMtE,QAAUyE,EAAgBH,EAAMtE,OAAOQ,MAEtD8D,EAAMI,QAAUJ,EAAMK,UAC5BL,EAAM9D,KAAO8D,EAAM9D,KAAKA,KAAOiE,EAAgBH,EAAMtE,OAAOQ,MAGvD+D,EAAA9D,EAAAC,cAAA,uCA4Bf2D,EAAY9B,UAAY,CACtB/B,KAAMgC,IAAUoC,OAChB5E,MAAOwC,IAAUE,OAAOC,WACxB+B,OAAQlC,IAAUqC,KAClBF,SAAUnC,IAAUqC,iBC1CPC,EAVC,SAAAvE,GAAA,IAAGwE,EAAHxE,EAAGwE,GAAIJ,EAAPpE,EAAOoE,SAAP,OACZJ,EAAA9D,EAAAC,cAACsE,EAAAvE,EAAD,CACIsE,GAAIA,EACJE,gBAAgB,kBAChBC,MAAM,YAELP,ICLHQ,UAAS,SAAA5E,KAAG6E,UAAH,OACbb,EAAA9D,EAAAC,cAAA,cACI6D,EAAA9D,EAAAC,cAAA,WACE6D,EAAA9D,EAAAC,cAAA,KAAG2E,KAAK,qBAAqBH,MAAM,YAAnC,KACAX,EAAA9D,EAAAC,cAAC4E,EAAD,CAASP,GAAG,KAAZ,WACAR,EAAA9D,EAAAC,cAAC4E,EAAD,CAASP,GAAG,aAAZ,uBACAR,EAAA9D,EAAAC,cAAC4E,EAAD,CAASP,GAAG,aAAZ,mBAEFR,EAAA9D,EAAAC,cAAA,OAAKwE,MAAM,YACTX,EAAA9D,EAAAC,cAAA,KAAG2E,KAAK,qBAAqBH,MAAM,WAAnC,cAKRC,EAAO5C,UAAY,CACjB6C,UAAW5C,IAAUE,QAGvByC,EAAOnB,aAAe,CACpBoB,UAAS,IAGID,iBCKAI,UA5BA,kBACXhB,EAAA9D,EAAAC,cAAC8E,EAAD,CACIxF,MAAK,aAST0E,OAAQ,SAAAlE,GAAI,OACR+D,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAAQ,SAAA,KACIsD,EAAA9D,EAAAC,cAAA,cACKF,EAAKyC,KAAKG,aAAaQ,OAD5B,OACuC,IAAI6B,MAAOC,cAC9CnB,EAAA9D,EAAAC,cAAA,OACIiF,MAAO,CACHC,MAAK,UAFb,cAKerB,EAAA9D,EAAAC,cAAA,KAAG2E,KAAK,4BAAR,cAnB3B7E,KAAAqF,MCSEC,UAAS,SAAAvF,GAAA,IAAGoE,EAAHpE,EAAGoE,SAAH,OACbJ,EAAA9D,EAAAC,cAAC8E,EAAD,CACExF,MAAK,YASL0E,OAAQ,SAAAlE,GAAI,OACV+D,EAAA9D,EAAAC,cAAA6D,EAAA9D,EAAAQ,SAAA,KACEsD,EAAA9D,EAAAC,cAACqF,EAAD,CAAQX,UAAW5E,EAAKyC,KAAKG,aAAazC,QAC1C4D,EAAA9D,EAAAC,cAAA,YAAOiE,GACPJ,EAAA9D,EAAAC,cAACsF,EAAD,QAdNxF,KAAAyF,MAoBFH,EAAOvD,UAAY,CACjBoC,SAAUnC,IAAUxB,KAAK2B,YAGZmD","file":"component---src-pages-log-book-js-2e57016fd6595e60cb2e.js","sourcesContent":["import React from \"react\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nconst LogBook = ({ data }) => (\r\n  <Layout>\r\n    <SEO title=\"Carnet de bord\" />\r\n    <h1>Carnet de bord</h1>\r\n    {data.allMarkdownRemark.edges.map(({ node }) => (\r\n        <>\r\n            <h2>Semaine {node.frontmatter.week}</h2>\r\n            <div dangerouslySetInnerHTML={{__html: node.html}} />\r\n        </>\r\n    ))}\r\n  </Layout>\r\n)\r\n\r\nexport const query = graphql`\r\n    query {\r\n        allMarkdownRemark(\r\n            sort: { fields: [frontmatter___week], order: ASC},\r\n            filter: { fileAbsolutePath: { regex: \"/log-book/\"}}\r\n        ) {\r\n            edges {\r\n                node {\r\n                    html\r\n                    frontmatter {\r\n                        week\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport default LogBook\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ]\r\n        .concat(\r\n          keywords.length > 0\r\n            ? {\r\n                name: `keywords`,\r\n                content: keywords.join(`, `),\r\n              }\r\n            : []\r\n        )\r\n        .concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `fr`,\r\n  meta: [],\r\n  keywords: [`cannabis`, `polytech`, `shejs`, `legalisation`],\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.array,\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import { Link } from \"gatsby\"\r\nimport React from \"react\"\r\n\r\nimport \"../css/nav-link.css\"\r\n\r\nconst NavLink = ({ to, children }) => (\r\n    <Link \r\n        to={to}\r\n        activeClassName=\"active-nav-link\"\r\n        class=\"nav-link\"\r\n    >\r\n        {children}\r\n    </Link>\r\n)\r\n\r\nexport default NavLink","import PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport NavLink from \"./nav-link\"\r\n\r\nimport \"../css/header.css\"\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <header>\r\n      <nav>\r\n        <a href=\"javascript:void(0)\" class=\"closebtn\">&times;</a>\r\n        <NavLink to=\"/\" >Accueil</NavLink>\r\n        <NavLink to=\"/timeline\" >Frise chronologique</NavLink>\r\n        <NavLink to=\"/log-book\" >Carnet de bord</NavLink>\r\n      </nav>\r\n      <div class=\"topBrand\">\r\n        <a href=\"javascript:void(0)\" class=\"openbtn\">&#9776; Menu</a>\r\n      </div>\r\n  </header>\r\n)\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","import React from \"react\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\n\r\nimport \"../css/footer.css\"\r\n\r\nconst Footer = () => (\r\n    <StaticQuery\r\n        query={graphql`\r\n            query SiteAuthorQuery {\r\n                site {\r\n                    siteMetadata {\r\n                        author\r\n                    }\r\n                }\r\n            }\r\n    `}\r\n    render={data => (\r\n        <>\r\n            <footer>\r\n                {data.site.siteMetadata.author} © {new Date().getFullYear()} \r\n                <div\r\n                    style={{\r\n                        float: `right`,\r\n                    }}\r\n                >\r\n                    Powered by <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\r\n                </div>\r\n            </footer>\r\n        </>\r\n    )}\r\n    />\r\n)\r\n\r\nexport default Footer","/**\r\n * Layout component that queries for data\r\n * with Gatsby's StaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\n\r\nimport Header from \"./header\"\r\nimport Footer from \"./footer\"\r\nimport \"../css/layout.css\"\r\n\r\nconst Layout = ({ children }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <>\r\n        <Header siteTitle={data.site.siteMetadata.title} />\r\n        <main>{children}</main>\r\n        <Footer/>\r\n      </>\r\n    )}\r\n  />\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/pages/resources/bibliography.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/nav-link.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","Bibliography","_ref","data","a","createElement","title","books","edges","map","_ref2","node","id","frontmatter","ref","dangerouslySetInnerHTML","__html","html","sites","_ref3","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","array","arrayOf","NavLink","to","partially","react_default","gatsby_browser_entry","activeClassName","partiallyActive","class","Header","siteTitle","href","components_nav_link","Footer","Fragment","Date","getFullYear","style","float","_1041092198","Layout","components_header","components_footer","_755544856"],"mappings":"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","file":"component---src-pages-resources-bibliography-js-4798ba5db4960ed67348.js","sourcesContent":["import React from \"react\"\r\n\r\nimport Layout from \"../../components/layout\"\r\nimport SEO from \"../../components/seo\"\r\n\r\nimport \"../../css/bibliography.css\"\r\n\r\nconst Bibliography = ({ data }) => (\r\n  <Layout>\r\n    <SEO title=\"Bibliographie\" />\r\n    <h1>Bibliographie</h1>\r\n    <h2>Articles scientifiques</h2>\r\n    {data.books.edges.map(({ node }) => (\r\n      <section>\r\n        <span id={\"src_\" + node.frontmatter.ref}>[{node.frontmatter.ref}]</span>\r\n        <article dangerouslySetInnerHTML={{ __html: node.html }} />\r\n      </section>\r\n    ))}\r\n    <h2>Sites webs</h2>\r\n    {data.sites.edges.map(({ node }) => (\r\n      <section>\r\n        <span id={\"src_\" + node.frontmatter.ref}>[{node.frontmatter.ref}]</span>\r\n        <article dangerouslySetInnerHTML={{ __html: node.html }} />\r\n      </section>\r\n    ))}\r\n  </Layout>\r\n)\r\n\r\nexport const query = graphql`\r\n  query {\r\n    books: allMarkdownRemark(\r\n      sort: { fields: [frontmatter___ref], order: ASC }\r\n      filter: { fileAbsolutePath: { regex: \"/bibliography\\/books/\" } }\r\n    ) {\r\n      edges {\r\n        node {\r\n          html\r\n          frontmatter {\r\n            ref\r\n          }\r\n        }\r\n      }\r\n    }\r\n    sites: allMarkdownRemark(\r\n        sort: { fields: [frontmatter___ref], order: ASC }\r\n        filter: { fileAbsolutePath: { regex: \"/bibliography\\/sites/\" } }\r\n      ) {\r\n        edges {\r\n          node {\r\n            html\r\n            frontmatter {\r\n              ref\r\n            }\r\n          }\r\n        }\r\n      }\r\n  }\r\n`\r\n\r\nexport default Bibliography\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `fr`,\n  meta: [],\n  keywords: [`cannabis`, `polytech`, `shejs`, `legalisation`],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport React from \"react\"\n\nimport \"../css/nav-link.css\"\n\nconst NavLink = ({ to, partially, children }) => (\n  <Link to={to} activeClassName=\"active-nav-link\" partiallyActive={partially} class=\"nav-link\">\n    {children}\n  </Link>\n)\n\nexport default NavLink\n","import PropTypes from \"prop-types\"\nimport React from \"react\"\nimport NavLink from \"./nav-link\"\n\nimport \"../css/header.css\"\n\nconst Header = ({ siteTitle }) => (\n  <header>\n    <nav>\n      <a href=\"javascript:void(0)\" class=\"closebtn\">\n        &times;\n      </a>\n      <NavLink to=\"/\">Introduction</NavLink>\n      <NavLink to=\"/laws\">Lois</NavLink>\n      <NavLink to=\"/actors\">Acteurs</NavLink>\n      <NavLink to=\"/debate\">Arbre des débats</NavLink>\n      <NavLink to=\"/timeline\">Frise chronologique</NavLink>\n      <NavLink to=\"/resources\" partially={true}>Ressources</NavLink>\n    </nav>\n    <div class=\"topBrand\">\n      <a href=\"javascript:void(0)\" class=\"openbtn\">\n        &#9776; Menu\n      </a>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport \"../css/footer.css\"\n\nconst Footer = () => (\n  <StaticQuery\n    query={graphql`\n      query SiteAuthorQuery {\n        site {\n          siteMetadata {\n            author\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <footer>\n          {data.site.siteMetadata.author} © {new Date().getFullYear()}\n          <div\n            style={{\n              float: `right`,\n            }}\n          >\n            Powered by <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </div>\n        </footer>\n      </>\n    )}\n  />\n)\n\nexport default Footer\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport Footer from \"./footer\"\nimport \"../css/layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <main>{children}</main>\n        <Footer />\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/pages/bibliography.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/nav-link.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","Bibliography","_ref","data","a","createElement","title","books","edges","map","_ref2","node","Fragment","frontmatter","ref","dangerouslySetInnerHTML","__html","html","sites","_ref3","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","React","InternalPageRenderer","Object","assign","json","propTypes","PropTypes","shape","string","isRequired","SEO","description","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","array","arrayOf","StaticQueryContext","createContext","StaticQuery","props","react_default","Consumer","staticQueryData","render","children","object","func","NavLink","to","gatsby_link_default","activeClassName","class","Header","siteTitle","href","components_nav_link","Footer","gatsby_browser_entry_StaticQuery","Date","getFullYear","style","float","_1041092198","Layout","components_header","components_footer","_755544856"],"mappings":"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","file":"component---src-pages-bibliography-js-430e5521be2bc83b091f.js","sourcesContent":["import React from \"react\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\nconst Bibliography = ({ data }) => (\r\n  <Layout>\r\n    <SEO title=\"Bibliographie\" />\r\n    <h1>Bibliographie</h1>\r\n    <h2>Articles scientifiques</h2>\r\n    {data.books.edges.map(({ node }) => (\r\n      <>\r\n        [{node.frontmatter.ref}]\r\n        <article dangerouslySetInnerHTML={{ __html: node.html }} />\r\n      </>\r\n    ))}\r\n    <h2>Sites webs</h2>\r\n    {data.sites.edges.map(({ node }) => (\r\n      <>\r\n        [{node.frontmatter.ref}]\r\n        <article dangerouslySetInnerHTML={{ __html: node.html }} />\r\n      </>\r\n    ))}\r\n  </Layout>\r\n)\r\n\r\nexport const query = graphql`\r\n  query {\r\n    books: allMarkdownRemark(\r\n      sort: { fields: [frontmatter___ref], order: ASC }\r\n      filter: { fileAbsolutePath: { regex: \"/bibliography\\/books/\" } }\r\n    ) {\r\n      edges {\r\n        node {\r\n          html\r\n          frontmatter {\r\n            ref\r\n          }\r\n        }\r\n      }\r\n    }\r\n    sites: allMarkdownRemark(\r\n        sort: { fields: [frontmatter___ref], order: ASC }\r\n        filter: { fileAbsolutePath: { regex: \"/bibliography\\/sites/\" } }\r\n      ) {\r\n        edges {\r\n          node {\r\n            html\r\n            frontmatter {\r\n              ref\r\n            }\r\n          }\r\n        }\r\n      }\r\n  }\r\n`\r\n\r\nexport default Bibliography\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `fr`,\n  meta: [],\n  keywords: [`cannabis`, `polytech`, `shejs`, `legalisation`],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import { Link } from \"gatsby\"\nimport React from \"react\"\n\nimport \"../css/nav-link.css\"\n\nconst NavLink = ({ to, children }) => (\n  <Link to={to} activeClassName=\"active-nav-link\" class=\"nav-link\">\n    {children}\n  </Link>\n)\n\nexport default NavLink\n","import PropTypes from \"prop-types\"\nimport React from \"react\"\nimport NavLink from \"./nav-link\"\n\nimport \"../css/header.css\"\n\nconst Header = ({ siteTitle }) => (\n  <header>\n    <nav>\n      <a href=\"javascript:void(0)\" class=\"closebtn\">\n        &times;\n      </a>\n      <NavLink to=\"/\">Introduction</NavLink>\n      <NavLink to=\"/laws\">Lois</NavLink>\n      <NavLink to=\"/actors\">Acteurs</NavLink>\n      <NavLink to=\"/debate\">Arbre des débats</NavLink>\n      <NavLink to=\"/timeline\">Frise chronologique</NavLink>\n      <NavLink to=\"/log-book\">Ressources</NavLink>\n    </nav>\n    <div class=\"topBrand\">\n      <a href=\"javascript:void(0)\" class=\"openbtn\">\n        &#9776; Menu\n      </a>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport \"../css/footer.css\"\n\nconst Footer = () => (\n  <StaticQuery\n    query={graphql`\n      query SiteAuthorQuery {\n        site {\n          siteMetadata {\n            author\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <footer>\n          {data.site.siteMetadata.author} © {new Date().getFullYear()}\n          <div\n            style={{\n              float: `right`,\n            }}\n          >\n            Powered by <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </div>\n        </footer>\n      </>\n    )}\n  />\n)\n\nexport default Footer\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport Footer from \"./footer\"\nimport \"../css/layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <main>{children}</main>\n        <Footer />\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/components/timeline-item.js","webpack:///./src/pages/timeline.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js"],"names":["TimelineItem","_ref","node","react_default","a","createElement","Fragment","className","frontmatter","title","dangerouslySetInnerHTML","__html","html","date","__webpack_require__","d","__webpack_exports__","query","TimelinePage","data","layout","seo","allMarkdownRemark","totalCount","edges","map","_ref2","timeline_item","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","array","arrayOf","Header","siteTitle","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","to","color","textDecoration","Footer","Date","getFullYear","float","href","_1563720716","Layout","header","components_footer","_755544856"],"mappings":"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","file":"component---src-pages-timeline-js-bea48ccfd5bb5381403a.js","sourcesContent":["import React from \"react\"\r\n\r\nconst TimelineItem = ({ node }) => (\r\n    <>\r\n        <div className=\"cd-timeline__block js-cd-block\">\r\n            <div className=\"cd-timeline__img cd-timeline__img--picture js-cd-img\">\r\n                \r\n            </div>\r\n\r\n            <div className=\"cd-timeline__content js-cd-content\">\r\n                <h2>{node.frontmatter.title}</h2>\r\n                <div dangerouslySetInnerHTML={{ __html: node.html }} />\r\n                <span className=\"cd-timeline__date\">{node.frontmatter.date}</span>\r\n            </div>\r\n        </div>\r\n    </>\r\n)\r\n\r\nexport default TimelineItem","import React from \"react\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport TimelineItem from \"../components/timeline-item\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport \"../components/timeline-item.css\"\r\n\r\nconst TimelinePage = ({ data }) => (\r\n  <Layout>\r\n    <SEO title=\"Frise chronologique\" />\r\n    <h1>Frise chronologique</h1>\r\n    <h4>{data.allMarkdownRemark.totalCount} événements</h4>\r\n    <section className=\"cd-timeline js-cd-timeline\">\r\n        <div className=\"cd-timeline__container\">\r\n            {data.allMarkdownRemark.edges.map(({ node }) => (\r\n                <TimelineItem node={node} />\r\n            ))}\r\n        </div>\r\n    </section>\r\n  </Layout>\r\n)\r\n\r\nexport const query = graphql`\r\n    query {\r\n        allMarkdownRemark(sort: { fields: [frontmatter___date], order: ASC}) {\r\n            totalCount\r\n            edges {\r\n                node {\r\n                    html\r\n                    frontmatter {\r\n                        title,\r\n                        date(formatString: \"DD MMMM YYYY\", locale: \"fr\")\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport default TimelinePage\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ]\r\n        .concat(\r\n          keywords.length > 0\r\n            ? {\r\n                name: `keywords`,\r\n                content: keywords.join(`, `),\r\n              }\r\n            : []\r\n        )\r\n        .concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `fr`,\r\n  meta: [],\r\n  keywords: [`cannabis`, `polytech`, `shejs`, `legalisation`],\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.array,\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","import { Link } from \"gatsby\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <header\r\n    style={{\r\n      background: `rgb(175, 202, 46)`,\r\n      marginBottom: `1.45rem`,\r\n    }}\r\n  >\r\n    <div\r\n      style={{\r\n        margin: `0 auto`,\r\n        maxWidth: 960,\r\n        padding: `1.45rem 1.0875rem`,\r\n      }}\r\n    >\r\n      <h1 style={{ margin: 0 }}>\r\n        <Link\r\n          to=\"/\"\r\n          style={{\r\n            color: `white`,\r\n            textDecoration: `none`,\r\n          }}\r\n        >\r\n          {siteTitle}\r\n        </Link>\r\n      </h1>\r\n    </div>\r\n  </header>\r\n)\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","import React from \"react\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\n\r\nimport \"./footer.css\"\r\n\r\nconst Footer = () => (\r\n    <StaticQuery\r\n        query={graphql`\r\n            query SiteAuthorQuery {\r\n                site {\r\n                    siteMetadata {\r\n                        author\r\n                    }\r\n                }\r\n            }\r\n    `}\r\n    render={data => (\r\n        <>\r\n            <footer>\r\n                {data.site.siteMetadata.author} © {new Date().getFullYear()} \r\n                <div\r\n                    style={{\r\n                        float: `right`,\r\n                    }}\r\n                >\r\n                    Powered by <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\r\n                </div>\r\n            </footer>\r\n        </>\r\n    )}\r\n    />\r\n)\r\n\r\nexport default Footer","/**\r\n * Layout component that queries for data\r\n * with Gatsby's StaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\n\r\nimport Header from \"./header\"\r\nimport Footer from \"./footer\"\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({ children }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <>\r\n        <Header siteTitle={data.site.siteMetadata.title} />\r\n        <main>{children}</main>\r\n        <Footer/>\r\n      </>\r\n    )}\r\n  />\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}
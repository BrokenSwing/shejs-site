{"version":3,"sources":["webpack:///./src/components/timeline-item.js","webpack:///./src/pages/timeline.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/nav-link.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js"],"names":["TimelineItem","_ref","node","react_default","a","createElement","Fragment","className","frontmatter","title","dangerouslySetInnerHTML","__html","html","date","__webpack_require__","d","__webpack_exports__","query","TimelinePage","data","layout","seo","allMarkdownRemark","totalCount","edges","map","_ref2","timeline_item","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","array","arrayOf","NavLink","to","partially","gatsby_browser_entry","activeClassName","partiallyActive","class","Header","siteTitle","href","components_nav_link","Footer","Date","getFullYear","style","float","_1041092198","Layout","components_header","components_footer","_755544856"],"mappings":"wIAgBeA,EAdM,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACnBC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kCACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,yDAEfJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,sCACbJ,EAAAC,EAAAC,cAAA,UAAKH,EAAKM,YAAYC,OACtBN,EAAAC,EAAAC,cAAA,OAAKK,wBAAyB,CAAEC,OAAQT,EAAKU,QAC7CT,EAAAC,EAAAC,cAAA,QAAME,UAAU,qBAAqBL,EAAKM,YAAYK,iBCV9DC,EAAAC,EAAAC,EAAA,0BAAAC,IASA,IAeaA,EAAK,aAoBHC,UAnCM,SAAAjB,GAAA,IAAGkB,EAAHlB,EAAGkB,KAAH,OACnBhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,KACEjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAKZ,MAAM,wBACXN,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,UAAKc,EAAKG,kBAAkBC,WAA5B,eACApB,EAAAC,EAAAC,cAAA,WAASE,UAAU,8BACjBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BACZY,EAAKG,kBAAkBE,MAAMC,IAAI,SAAAC,GAAA,IAAGxB,EAAHwB,EAAGxB,KAAH,OAChCC,EAAAC,EAAAC,cAACsB,EAAD,CAAczB,KAAMA,4CCjB9BY,EAAAC,EAAAC,EAAA,sBAAAY,IAAA,IAAAC,EAAAf,EAAA,GAAAgB,EAAAhB,EAAAiB,EAAAF,GAAAG,EAAAlB,EAAA,GAAAmB,EAAAnB,EAAAiB,EAAAC,GAAAE,EAAApB,EAAA,IAAAqB,EAAArB,EAAAiB,EAAAG,GAAApB,EAAAC,EAAAC,EAAA,sBAAAmB,EAAA/B,IAAAU,EAAA,SAYMsB,EAAqBC,IAAMC,cAAc,IAEzCV,EAAc,SAAAW,GAAK,OACvBT,EAAA1B,EAAAC,cAAC+B,EAAmBI,SAApB,KACG,SAAAC,GACC,OACEF,EAAMpB,MACLsB,EAAgBF,EAAMtB,QAAUwB,EAAgBF,EAAMtB,OAAOE,MAEtDoB,EAAMG,QAAUH,EAAMI,UAC5BJ,EAAMpB,KAAOoB,EAAMpB,KAAKA,KAAOsB,EAAgBF,EAAMtB,OAAOE,MAGvDW,EAAA1B,EAAAC,cAAA,uCA4BfuB,EAAYgB,UAAY,CACtBzB,KAAM0B,IAAUC,OAChB7B,MAAO4B,IAAUE,OAAOC,WACxBN,OAAQG,IAAUI,KAClBN,SAAUE,IAAUI,2BCzDtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,4KCMzCK,EAAmB,SAAAtD,GAAkB,IAAfuD,EAAevD,EAAfuD,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAOvB,IAAMhC,cAAcwD,IAApBC,OAAAC,OAAA,CACLP,WACAC,iBACGA,EAAcO,QAIrBT,EAAiBX,UAAY,CAC3BY,SAAUX,IAAUoB,MAAM,CACxBL,SAAUf,IAAUE,OAAOC,aAC1BA,YAGUO,4LChBf,SAASW,EAATjE,GAA2D,IAA5CkE,EAA4ClE,EAA5CkE,YAAaC,EAA+BnE,EAA/BmE,KAAMC,EAAyBpE,EAAzBoE,KAAMC,EAAmBrE,EAAnBqE,SAAU7D,EAASR,EAATQ,MACxC8D,EADiDC,EAAArD,KACjDoD,KAcFE,EAAkBN,GAAeI,EAAKG,aAAaP,YAEzD,OACEQ,EAAAvE,EAAAC,cAACuE,EAAAxE,EAAD,CACEyE,eAAgB,CACdT,QAEF3D,MAAOA,EACPqE,cAAa,QAAUP,EAAKG,aAAajE,MACzC4D,KAAM,CACJ,CACEU,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAASvE,GAEX,CACEwE,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAAST,EAAKG,aAAaQ,QAE7B,CACEH,KAAI,gBACJC,QAASvE,GAEX,CACEsE,KAAI,sBACJC,QAASP,IAGVU,OACCb,EAASc,OAAS,EACd,CACEL,KAAI,WACJC,QAASV,EAASe,KAAT,OAEX,IAELF,OAAOd,KAKhBH,EAAIoB,aAAe,CACjBlB,KAAI,KACJC,KAAM,GACNC,SAAU,gDAGZJ,EAAItB,UAAY,CACduB,YAAatB,IAAUE,OACvBqB,KAAMvB,IAAUE,OAChBsB,KAAMxB,IAAU0C,MAChBjB,SAAUzB,IAAU2C,QAAQ3C,IAAUE,QACtCtC,MAAOoC,IAAUE,OAAOC,YAGXkB,qPC/EAuB,UANC,SAAAxF,GAAA,IAAGyF,EAAHzF,EAAGyF,GAAIC,EAAP1F,EAAO0F,UAAWhD,EAAlB1C,EAAkB0C,SAAlB,OACdxC,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAMF,GAAIA,EAAIG,gBAAgB,kBAAkBC,gBAAiBH,EAAWI,MAAM,YAC/EpD,KCDCqD,UAAS,SAAA/F,KAAGgG,UAAH,OACb9F,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,KAAG6F,KAAK,qBAAqBH,MAAM,YAAnC,KAGA5F,EAAAC,EAAAC,cAAC8F,EAAD,CAAST,GAAG,KAAZ,gBACAvF,EAAAC,EAAAC,cAAC8F,EAAD,CAAST,GAAG,SAAZ,QACAvF,EAAAC,EAAAC,cAAC8F,EAAD,CAAST,GAAG,WAAZ,WACAvF,EAAAC,EAAAC,cAAC8F,EAAD,CAAST,GAAG,WAAZ,oBACAvF,EAAAC,EAAAC,cAAC8F,EAAD,CAAST,GAAG,aAAZ,uBACAvF,EAAAC,EAAAC,cAAC8F,EAAD,CAAST,GAAG,aAAaC,WAAW,GAApC,eAEFxF,EAAAC,EAAAC,cAAA,OAAK0F,MAAM,YACT5F,EAAAC,EAAAC,cAAA,KAAG6F,KAAK,qBAAqBH,MAAM,WAAnC,cAONC,EAAOpD,UAAY,CACjBqD,UAAWpD,IAAUE,QAGvBiD,EAAOV,aAAe,CACpBW,UAAS,IAGID,iBCFAI,UA5BA,kBACbjG,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CACE3E,MAAK,aASLyB,OAAQ,SAAAvB,GAAI,OACVhB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,cACGc,EAAKoD,KAAKG,aAAaQ,OAD1B,OACqC,IAAImB,MAAOC,cAC9CnG,EAAAC,EAAAC,cAAA,OACEkG,MAAO,CACLC,MAAK,UAFT,cAKarG,EAAAC,EAAAC,cAAA,KAAG6F,KAAK,4BAAR,cAnBrB/E,KAAAsF,MCSIC,UAAS,SAAAzG,GAAA,IAAG0C,EAAH1C,EAAG0C,SAAH,OACbxC,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CACE3E,MAAK,YASLyB,OAAQ,SAAAvB,GAAI,OACVhB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAACsG,EAAD,CAAQV,UAAW9E,EAAKoD,KAAKG,aAAajE,QAC1CN,EAAAC,EAAAC,cAAA,YAAOsC,GACPxC,EAAAC,EAAAC,cAACuG,EAAD,QAdNzF,KAAA0F,MAoBFH,EAAO9D,UAAY,CACjBD,SAAUE,IAAU3C,KAAK8C,YAGZ0D","file":"component---src-pages-timeline-js-3020d569708ed6ca85c1.js","sourcesContent":["import React from \"react\"\n\nconst TimelineItem = ({ node }) => (\n  <>\n    <div className=\"cd-timeline__block js-cd-block\">\n      <div className=\"cd-timeline__img cd-timeline__img--picture js-cd-img\" />\n\n      <div className=\"cd-timeline__content js-cd-content\">\n        <h2>{node.frontmatter.title}</h2>\n        <div dangerouslySetInnerHTML={{ __html: node.html }} />\n        <span className=\"cd-timeline__date\">{node.frontmatter.date}</span>\n      </div>\n    </div>\n  </>\n)\n\nexport default TimelineItem\n","import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport TimelineItem from \"../components/timeline-item\"\nimport { graphql } from \"gatsby\"\n\nimport \"../css/timeline-item.css\"\n\nconst TimelinePage = ({ data }) => (\n  <Layout>\n    <SEO title=\"Frise chronologique\" />\n    <h1>Frise chronologique</h1>\n    <h4>{data.allMarkdownRemark.totalCount} événements</h4>\n    <section className=\"cd-timeline js-cd-timeline\">\n      <div className=\"cd-timeline__container\">\n        {data.allMarkdownRemark.edges.map(({ node }) => (\n          <TimelineItem node={node} />\n        ))}\n      </div>\n    </section>\n  </Layout>\n)\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: ASC }\n      filter: { fileAbsolutePath: { regex: \"/timeline/\" } }\n    ) {\n      totalCount\n      edges {\n        node {\n          html\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM YYYY\", locale: \"fr\")\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default TimelinePage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `fr`,\n  meta: [],\n  keywords: [`cannabis`, `polytech`, `shejs`, `legalisation`],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport React from \"react\"\n\nimport \"../css/nav-link.css\"\n\nconst NavLink = ({ to, partially, children }) => (\n  <Link to={to} activeClassName=\"active-nav-link\" partiallyActive={partially} class=\"nav-link\">\n    {children}\n  </Link>\n)\n\nexport default NavLink\n","import PropTypes from \"prop-types\"\nimport React from \"react\"\nimport NavLink from \"./nav-link\"\n\nimport \"../css/header.css\"\n\nconst Header = ({ siteTitle }) => (\n  <header>\n    <nav>\n      <a href=\"javascript:void(0)\" class=\"closebtn\">\n        &times;\n      </a>\n      <NavLink to=\"/\">Introduction</NavLink>\n      <NavLink to=\"/laws\">Lois</NavLink>\n      <NavLink to=\"/actors\">Acteurs</NavLink>\n      <NavLink to=\"/debate\">Arbre des débats</NavLink>\n      <NavLink to=\"/timeline\">Frise chronologique</NavLink>\n      <NavLink to=\"/resources\" partially={true}>Ressources</NavLink>\n    </nav>\n    <div class=\"topBrand\">\n      <a href=\"javascript:void(0)\" class=\"openbtn\">\n        &#9776; Menu\n      </a>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport \"../css/footer.css\"\n\nconst Footer = () => (\n  <StaticQuery\n    query={graphql`\n      query SiteAuthorQuery {\n        site {\n          siteMetadata {\n            author\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <footer>\n          {data.site.siteMetadata.author} © {new Date().getFullYear()}\n          <div\n            style={{\n              float: `right`,\n            }}\n          >\n            Powered by <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </div>\n        </footer>\n      </>\n    )}\n  />\n)\n\nexport default Footer\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport Footer from \"./footer\"\nimport \"../css/layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <main>{children}</main>\n        <Footer />\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/pages/resources/glossary.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/images/favicon.jpg","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/nav-link.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","Glossary","a","createElement","title","d","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","p","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","link","rel","type","href","icon","titleTemplate","name","content","property","author","concat","length","join","defaultProps","array","arrayOf","NavLink","to","partially","react_default","gatsby_browser_entry","activeClassName","partiallyActive","class","Header","siteTitle","components_nav_link","Footer","Fragment","Date","getFullYear","style","float","_1041092198","Layout","components_header","components_footer","_755544856","node"],"mappings":"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","file":"component---src-pages-resources-glossary-js-2f9e0390cef13ffcb32f.js","sourcesContent":["import React from \"react\"\r\n\r\nimport Layout from \"../../components/layout\"\r\nimport SEO from \"../../components/seo\"\r\n\r\nimport \"../../css/glossary.css\"\r\n\r\nconst Glossary = () => (\r\n  <Layout>\r\n    <SEO title=\"Glossaire\" />\r\n    <h1>Glossaire</h1>\r\n    <table>\r\n        <tr><th>THC</th><td>Δ-9-tétrahydrocannabinol, substance psychotrope présente dans les formes récréatives du cannabis (sativa, indica, afghanica).</td></tr>\r\n        <tr><th>CBD</th><td>Cannabidiol, cannabis sans THC.</td></tr>\r\n        <tr><th>MILDECA / MILDT</th><td>Mission interministérielle de lutte contre les drogues et les conduites addictives / Toxicomanie.</td></tr>\r\n        <tr><th>OFDT</th><td>Observatoire Français des Drogues et des Toxicomanies.</td></tr>\r\n        <tr><th>OCRTIS</th><td>Office Central pour la Répression du Trafic Illicite des Stupéfiants</td></tr>\r\n    </table>\r\n  </Layout>\r\n)\r\n\r\nexport default Glossary\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","module.exports = __webpack_public_path__ + \"static/favicon-28b8066cb9c618ea4c25239b2f761e91.jpg\";","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport icon from \"../images/favicon.jpg\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      link={[\n        {\n          rel: `icon`,\n          type: `image/jpg`,\n          href: icon\n        }\n      ]}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `fr`,\n  meta: [],\n  keywords: [`cannabis`, `polytech`, `shejs`, `legalisation`],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport React from \"react\"\n\nimport \"../css/nav-link.css\"\n\nconst NavLink = ({ to, partially, children }) => (\n  <Link to={to} activeClassName=\"active-nav-link\" partiallyActive={partially} class=\"nav-link\">\n    {children}\n  </Link>\n)\n\nexport default NavLink\n","import PropTypes from \"prop-types\"\nimport React from \"react\"\nimport NavLink from \"./nav-link\"\n\nimport \"../css/header.css\"\n\nconst Header = ({ siteTitle }) => (\n  <header>\n    <nav>\n      <a href=\"javascript:void(0)\" class=\"closebtn\">\n        &times;\n      </a>\n      <NavLink to=\"/\">Introduction</NavLink>\n      <NavLink to=\"/laws\">Lois</NavLink>\n      <NavLink to=\"/actors\">Acteurs</NavLink>\n      <NavLink to=\"/debate\">Arbre des débats</NavLink>\n      <NavLink to=\"/timeline\">Frise chronologique</NavLink>\n      <NavLink to=\"/resources\" partially={true}>Ressources</NavLink>\n    </nav>\n    <div class=\"topBrand\">\n      <a href=\"javascript:void(0)\" class=\"openbtn\">\n        &#9776; Menu\n      </a>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport \"../css/footer.css\"\n\nconst Footer = () => (\n  <StaticQuery\n    query={graphql`\n      query SiteAuthorQuery {\n        site {\n          siteMetadata {\n            author\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <footer>\n          {data.site.siteMetadata.author} © {new Date().getFullYear()}\n          <div\n            style={{\n              float: `right`,\n            }}\n          >\n            Powered by <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </div>\n        </footer>\n      </>\n    )}\n  />\n)\n\nexport default Footer\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport Footer from \"./footer\"\nimport \"../css/layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <main>{children}</main>\n        <Footer />\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}